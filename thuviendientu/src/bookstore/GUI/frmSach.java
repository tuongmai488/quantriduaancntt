/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bookstore.GUI;

import bookstore.BLL.GianHangBLL;
import bookstore.BLL.NhaXuatBanBLL;
import bookstore.BLL.SachBLL;
import bookstore.Entity.GianHang;
import bookstore.Entity.NhaXuatBan;
import bookstore.Entity.Sach;
import java.awt.Desktop;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;

/**
 *
 * 
 */
public class frmSach extends javax.swing.JFrame {

    SachBLL obj = new SachBLL();
    NhaXuatBanBLL objnxb = new NhaXuatBanBLL();
    GianHangBLL objgh = new GianHangBLL();

    ArrayList<Sach> lst = new ArrayList<>();
    ArrayList<NhaXuatBan> lstnxb = new ArrayList<>();
    ArrayList<GianHang> lstgh = new ArrayList<>();

    /**
     * Creates new form frmSach
     */
    public frmSach() {
        initComponents();
        setDefaultCloseOperation(HIDE_ON_CLOSE);
        binData("", "", "");
        binCmbNXB();
        binCmbGH();
        setIconImage(new ImageIcon(getClass().getResource("imgs/library.png")).getImage());
    }

    void binCmbGH() {
        cmbGianHang.removeAllItems();
        lstgh = objgh.getAll("", "", "");
        for (GianHang i : lstgh) {
            cmbGianHang.addItem(i.getTenGianHang());
        }
        cmbGianHang.setSelectedIndex(-1);
    }

    void binCmbNXB() {
        cmbNhaXuatBan.removeAllItems();
        lstnxb = objnxb.getAll("", "", "");
        for (NhaXuatBan i : lstnxb) {
            cmbNhaXuatBan.addItem(i.getTenNXB());
        }
        cmbNhaXuatBan.setSelectedIndex(-1);
    }

    public void binData(String t, String w, String o) {
        lst = obj.getAll(t, w, o);
        Vector col = new Vector();
        col.add("Mã Sách");
        col.add("Tiêu đề");
        col.add("Tác Giả");
        col.add("Năm Xuất Bản");
        col.add("Giá Bìa");
        col.add("Nhà xuất bản");
        col.add("Số lượng");
        col.add("Gian Hàng");

        Vector data = new Vector();
        for (Sach i : lst) {
            Vector row = new Vector();
            row.add(i.getMaSach());
            row.add(i.getTieuDe());
            row.add(i.getTacGia());
            row.add(i.getNamXuatBan());
            row.add(i.getGiaBia());
            row.add(i.getMaNXB());
            row.add(i.getSoLuongTon());
            row.add(i.getMaGianHang());
            data.add(row);
        }
        DefaultTableModel dtm = new DefaultTableModel(data, col);
        tbSach.setModel(dtm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaSach = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTieuDe = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTacGia = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNamXuatBan = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtGiaBia = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtSoLuongTon = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cmbNhaXuatBan = new javax.swing.JComboBox<>();
        cmbGianHang = new javax.swing.JComboBox<>();
        btnGH = new javax.swing.JButton();
        btnNXB = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSach = new javax.swing.JTable();
        btnTimKiem = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnThemMoi = new javax.swing.JButton();
        btnLamTuoi = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXuat = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jMenuItem1.setText("jMenuItem1");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 42, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản Lý Sách | Phần Mềm Quản Lý Nhà Sách Tuấn Hằng");
        setLocation(new java.awt.Point(50, 50));
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Mã Sách");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Tiêu Đề");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Tác Giả");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Năm Xuất Bản");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Giá Bìa");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Nhà Xuất Bản");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("Số Lượng Tồn");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("Gian Hàng");

        cmbNhaXuatBan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbGianHang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnGH.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnGH.setText("Làm Tươi");
        btnGH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGHActionPerformed(evt);
            }
        });

        btnNXB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnNXB.setText("Làm Tươi");
        btnNXB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNXBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(txtMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(txtTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(txtTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(txtNamXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(txtGiaBia, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbNhaXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(txtSoLuongTon, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cmbGianHang, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGH, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNXB, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNamXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtGiaBia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbNhaXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNXB))
                .addGap(9, 9, 9)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSoLuongTon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbGianHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGH))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmbGianHang, cmbNhaXuatBan, txtSoLuongTon});

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tbSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbSachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbSach);

        btnTimKiem.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        txtTimKiem.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Tìm kiếm theo Tên Sách");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 128, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTimKiem)
                .addGap(49, 49, 49))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        btnThemMoi.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnThemMoi.setText("Thêm Mới");
        btnThemMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemMoiActionPerformed(evt);
            }
        });

        btnLamTuoi.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnLamTuoi.setText("Làm Mới");
        btnLamTuoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamTuoiActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setEnabled(false);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setEnabled(false);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnXuat.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnXuat.setText("Xuất DS");
        btnXuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnXuatMouseClicked(evt);
            }
        });
        btnXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatActionPerformed(evt);
            }
        });

        btnImport.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnImport.setText("Nhập Data");
        btnImport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImportMouseClicked(evt);
            }
        });
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(btnLamTuoi)
                .addGap(72, 72, 72)
                .addComponent(btnThemMoi)
                .addGap(88, 88, 88)
                .addComponent(btnSua)
                .addGap(85, 85, 85)
                .addComponent(btnXoa)
                .addGap(70, 70, 70)
                .addComponent(btnXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(btnImport)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnLamTuoi, btnSua, btnThemMoi, btnXoa});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemMoi)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLamTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnLamTuoi, btnSua, btnThemMoi, btnXoa});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSachMouseClicked
        // TODO add your handling code here:
        if (tbSach.getSelectedRow() == -1) {
            return;
        }
        btnThemMoi.setEnabled(false);
        btnSua.setEnabled(true);
        btnXoa.setEnabled(true);

        int row = tbSach.getSelectedRow();
        txtMaSach.setText(tbSach.getValueAt(row, 0).toString());
        txtTieuDe.setText(tbSach.getValueAt(row, 1).toString());
        txtTacGia.setText(tbSach.getValueAt(row, 2).toString());
        txtNamXuatBan.setText(tbSach.getValueAt(row, 3).toString());
        txtGiaBia.setText(tbSach.getValueAt(row, 4).toString());
        cmbNhaXuatBan.setSelectedItem(tbSach.getValueAt(row, 5).toString());
        txtSoLuongTon.setText(tbSach.getValueAt(row, 6).toString());
        cmbGianHang.setSelectedItem(tbSach.getValueAt(row, 7).toString());
    }//GEN-LAST:event_tbSachMouseClicked

    private void btnThemMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemMoiActionPerformed
        // TODO add your handling code here:
        Sach data = new Sach();
        data.setMaSach(txtMaSach.getText());
        if (txtMaSach.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Mã sách trống!");
            return;
        }
        data.setTieuDe(txtTieuDe.getText());
        if (data.getTieuDe().equals("")) {
            JOptionPane.showMessageDialog(this, "Tiêu đề trống!");
            return;
        }
        data.setTacGia(txtTacGia.getText());
        if (data.getTacGia().equals("")) {
            JOptionPane.showMessageDialog(this, "Tác giả trống!");
            return;
        }
        try {
            int x = Integer.parseInt(txtNamXuatBan.getText());
            if (x < 1000 || x > LocalDate.now().getYear()) {
                JOptionPane.showMessageDialog(this, "Năm xuất bản không hợp lệ!");
                return;
            }
            data.setNamXuatBan(x);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Năm xuất bản không hợp lệ!");
            return;
        }
        try {
            int x = Integer.parseInt(txtGiaBia.getText());
            if (x < 1) {
                JOptionPane.showMessageDialog(this, "Giá bìa không hợp lệ!");

                txtGiaBia.requestFocus();
                txtGiaBia.selectAll();
                return;
            }
            data.setGiaBia(x);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Giá bìa không hợp lệ!");
            return;
        }
        if (cmbNhaXuatBan.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(this, "Chọn nhà xuất bản!");
            return;
        }
        data.setMaNXB(lstnxb.get(cmbNhaXuatBan.getSelectedIndex()).getMaNXB());
        try {
            if (Integer.parseInt(txtSoLuongTon.getText()) < 0) {
                JOptionPane.showMessageDialog(this, "Số lượng tồn không cho phép âm");
                return;
            }
            data.setSoLuongTon(Integer.parseInt(txtSoLuongTon.getText()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Số lượng tồn không hợp lệ");
            JOptionPane.showMessageDialog(this, e);
            txtSoLuongTon.requestFocus();
            txtSoLuongTon.selectAll();
            return;
        }
        if (cmbGianHang.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(this, "Chọn gian hàng!");
            return;
        }
        data.setMaGianHang(lstgh.get(cmbGianHang.getSelectedIndex()).getMaGianHang());
        if (JOptionPane.showConfirmDialog(this, "Thêm mới bản ghi?", "Thông báo!!!", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (obj.insertData(data) == true) {
                binData("", "", "");
                JOptionPane.showMessageDialog(null, "Thêm mới thành công !");
            } else {
                JOptionPane.showMessageDialog(null, "Thêm mới thất bại !");
            }
        }
        clearText();
    }//GEN-LAST:event_btnThemMoiActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        int row = tbSach.getSelectedRow();
        if (row >= 0) {
            String id = tbSach.getValueAt(row, 0).toString();
            Sach data = new Sach();
            data.setTieuDe(txtTieuDe.getText());
            data.setTacGia(txtTacGia.getText());
            try {
                data.setNamXuatBan(Integer.parseInt(txtNamXuatBan.getText()));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
                txtNamXuatBan.requestFocus();
                txtNamXuatBan.selectAll();
                return;
            }
            try {
                data.setGiaBia(Integer.parseInt(txtGiaBia.getText()));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
                txtGiaBia.requestFocus();
                txtGiaBia.selectAll();
                return;
            }
            data.setMaNXB(lstnxb.get(cmbNhaXuatBan.getSelectedIndex()).getMaNXB());
            try {
                data.setSoLuongTon(Integer.parseInt(txtSoLuongTon.getText()));
            } catch (Exception e) {
            }
            data.setMaGianHang(lstgh.get(cmbGianHang.getSelectedIndex()).getMaGianHang());
            data.setMaSach(id);
            if (JOptionPane.showConfirmDialog(this, "Sửa bản ghi này?", "Thông báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                if (obj.updateData(data)) {
                    binData("", "", "");
                    JOptionPane.showMessageDialog(this, "Sửa thành công!");
                } else {
                    JOptionPane.showMessageDialog(this, "Sửa không thành công!");
                }
            }

        } else {
            JOptionPane.showMessageDialog(this, "Chọn bạn ghi cần sửa trước");
        }
        clearText();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int row = tbSach.getSelectedRow();
        if (row >= 0) {
            String id = tbSach.getValueAt(row, 0).toString();
            int dialogResult = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa bản ghi?", "Cảnh báo", JOptionPane.YES_NO_OPTION);
            if (dialogResult == JOptionPane.YES_OPTION) {
                if (obj.deleteData(id)) {
                    binData("", "", "");
                    JOptionPane.showMessageDialog(this, "Xóa thành công!");
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa không thành công!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Chọn bạn ghi cần xóa trước");
        }
        clearText();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        String w = "tieuDe like N'" + "%" + txtTimKiem.getText() + "%" + "'";
        binData("", w, "");
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnLamTuoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamTuoiActionPerformed
        // TODO add your handling code here:
        binData("", "", "");
        clearText();
        btnSua.setEnabled(false);
        btnThemMoi.setEnabled(true);
        btnXoa.setEnabled(false);
    }//GEN-LAST:event_btnLamTuoiActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        new frmHeThong().setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        JFileChooser jc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("XLS files", "xls");
        jc.setFileFilter(filter);
        int option = jc.showOpenDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            File path = jc.getSelectedFile();
            String url = path.getPath();
            if (url.length() < 4 || !(url.substring(url.length() - 4).equals(".xls"))) {
                JOptionPane.showMessageDialog(this, "Chỉ hỗ trợ file .xls!");
            }
            try {
                JOptionPane.showMessageDialog(this, readXLSFile(url) + " bản ghi được đọc thành công!");
                binData("", "", "");
            } catch (IOException ex) {
                Logger.getLogger(frmSach.class.getName()).log(Level.SEVERE, null, ex);
                ex.printStackTrace();
            }
        }

    }//GEN-LAST:event_btnImportActionPerformed

    public String readXLSFile(String path) throws IOException {
        int c1 = 0,c2 = 0;
        InputStream ExcelFileToRead = new FileInputStream(path);
        HSSFWorkbook wb = new HSSFWorkbook(ExcelFileToRead);

        HSSFSheet sheet = wb.getSheetAt(0);
        HSSFRow row;
        HSSFCell cell;

        Iterator rows = sheet.rowIterator();
        boolean c = false;
        while (rows.hasNext()) {
            row = (HSSFRow) rows.next();
            Iterator cells = row.cellIterator();
            Vector v = new Vector();
            while (cells.hasNext() && c) {
                cell = (HSSFCell) cells.next();
                if (cell.getCellType() == HSSFCell.CELL_TYPE_STRING) {
//                    System.out.println("t: "+cell.getStringCellValue());
                    v.add(cell.getStringCellValue());
                } else if (cell.getCellType() == HSSFCell.CELL_TYPE_NUMERIC) {
//                    System.out.println("n: "+(int)cell.getNumericCellValue());
                    v.add((int)cell.getNumericCellValue());
                } else {

                }
            }
            if (c) {
//                System.out.println(v.get(0).toString());
//                System.out.println(v.get(1).toString());
//                System.out.println(v.get(2).toString());
//                System.out.println(v.get(3).toString());
//                System.out.println(v.get(4).toString());
//                System.out.println(v.get(5).toString());
//                System.out.println(v.get(6).toString());
//                System.out.println(v.get(7).toString());
//                System.out.println("");
                Sach s = new Sach();
                s.setMaSach(v.get(0).toString());
                s.setTieuDe(v.get(1).toString());
                s.setTacGia(v.get(2).toString());
                s.setNamXuatBan(Integer.parseInt(v.get(3).toString()));
                s.setGiaBia(Integer.parseInt(v.get(4).toString()));
                s.setMaNXB((v.get(5).toString()));
                s.setSoLuongTon(Integer.parseInt(v.get(6).toString()));
                s.setMaGianHang(v.get(7).toString());
                c1++;
                if (obj.insertData(s)) {
                    c2++;
//                    System.out.println("yyy");
                }
            }
            c = true;
        }
        return (c2 + "/" + c1);
    }

    private void btnImportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImportMouseClicked

    }//GEN-LAST:event_btnImportMouseClicked

    private void btnGHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGHActionPerformed
        // TODO add your handling code here:
        new jdGianHang(this, true).setVisible(true);
        cmbGianHang.setSelectedItem(jdGianHang.idGH);
    }//GEN-LAST:event_btnGHActionPerformed

    private void btnNXBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNXBActionPerformed
        // TODO add your handling code here:
        new jdNXB(this, true).setVisible(true);
        cmbNhaXuatBan.setSelectedItem(jdNXB.idNXB);
    }//GEN-LAST:event_btnNXBActionPerformed

    private void btnXuatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXuatMouseClicked
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        int option = fc.showSaveDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            String filename = fc.getSelectedFile().getName();
            String path = fc.getSelectedFile().getParentFile().getPath();
            int len = filename.length();
            String ext = "";
            String file = "";

            if (len > 4) {
                ext = filename.substring(len - 4, len);
            }

            if (ext.equals(".xls")) {
                file = path + "\\" + filename;
            } else {
                file = path + "\\" + filename + ".xls";
            }
            try {
                toExcel(tbSach, new File(file));
                if (JOptionPane.showConfirmDialog(this, "Mở file?", "Xuất file thành công!!!", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    File f = new File(file);
                    try {
                        Desktop.getDesktop().open(f);
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
            } catch (IOException ex) {
                Logger.getLogger(frmSach.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Xuất file không thành công!");
            }
        }
    }//GEN-LAST:event_btnXuatMouseClicked

    private void btnXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnXuatActionPerformed

    void clearText() {
        txtMaSach.setText("");
        txtTieuDe.setText("");
        txtNamXuatBan.setText("");
        txtSoLuongTon.setText("");
        txtGiaBia.setText("");
        txtTimKiem.setText("");
        txtTacGia.setText("");
        cmbGianHang.setSelectedIndex(-1);
        cmbNhaXuatBan.setSelectedIndex(-1);
    }

    public static void toExcel(JTable table, File file) throws IOException {
        String sheetName = "Sheet1";//name of sheet
        HSSFWorkbook wb = new HSSFWorkbook();
        HSSFSheet sheet = wb.createSheet(sheetName);
        TableModel model = table.getModel();
        //Get colum name
        HSSFRow row = sheet.createRow(0);
        for (int i = 0; i < model.getColumnCount(); i++) {
            HSSFCell cell = row.createCell(i);
            cell.setCellValue(model.getColumnName(i).toString());
        }
        //iterating r number of rows
        for (int r = 1; r <= model.getRowCount(); r++) {
            row = sheet.createRow(r);
            //iterating c number of columns
            for (int c = 0; c < model.getColumnCount(); c++) {
                HSSFCell cell = row.createCell(c);

                cell.setCellValue(model.getValueAt(r - 1, c).toString());
            }
        }

        FileOutputStream fileOut = new FileOutputStream(file);

        //write this workbook to an Outputstream.
        wb.write(fileOut);
        fileOut.flush();
        fileOut.close();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmSach().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGH;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnLamTuoi;
    private javax.swing.JButton btnNXB;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThemMoi;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXuat;
    private javax.swing.JComboBox<String> cmbGianHang;
    private javax.swing.JComboBox<String> cmbNhaXuatBan;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbSach;
    private javax.swing.JTextField txtGiaBia;
    private javax.swing.JTextField txtMaSach;
    private javax.swing.JTextField txtNamXuatBan;
    private javax.swing.JTextField txtSoLuongTon;
    private javax.swing.JTextField txtTacGia;
    private javax.swing.JTextField txtTieuDe;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
